<center><h1> <%= @river.name %></h1><center>
<center><h2>( <%= @river.get_latest_reading.river_level %> - <%= distance_of_time_in_words(@river.get_latest_reading.time_string.to_time, Time.now) %> ago )</h2></center>
<% if @river_data %>
<div width="80" height="450">
  <canvas id="line-chart" width="800" height="450"
    data-timestamps="<%= @river_data[:timestamps].to_json %>"
    data-real="<%= @river_data[:real_levels].to_json %>"
    data-forecast="<%= @river_data[:predicted_level].to_json %>"
    data-rain="<%= @river_data[:rain_level].to_json %>"></canvas>
</div>
<script>

var horizonalLinePlugin = {
  afterDraw: function(chartInstance) {
    var yScale = chartInstance.scales["y-axis-0"];
    var canvas = chartInstance.chart;
    var ctx = canvas.ctx;
    var index;
    var line;
    var style;

    if (chartInstance.options.horizontalLine) {
      for (index = 0; index < chartInstance.options.horizontalLine.length; index++) {
        line = chartInstance.options.horizontalLine[index];

        if (!line.style) {
          style = "rgba(169,169,169, .6)";
        } else {
          style = line.style;
        }

        if (line.y) {
          yValue = yScale.getPixelForValue(line.y);
        } else {
          yValue = 0;
        }

        ctx.lineWidth = 3;

        if (yValue) {
          ctx.beginPath();
          ctx.moveTo(0, yValue);
          ctx.lineTo(canvas.width, yValue);
          ctx.strokeStyle = style;
          ctx.stroke();
        }

        if (line.text) {
          ctx.fillStyle = style;
          ctx.fillText(line.text, 0, yValue + ctx.lineWidth);
        }
      }
      return;
    };
  }
};
Chart.pluginService.register(horizonalLinePlugin);

new Chart(document.getElementById("line-chart"), {
  type: 'line',
  data: {
    labels: $('#line-chart').data('timestamps'),
    datasets: [{
        data: $('#line-chart').data('real'),
        label: "Actual River Level",
        borderColor: "#3e95cd",
        fill: false
      }, {
        data: $('#line-chart').data('forecast'),
        label: "Forecast River Level",
        borderColor: "#8e5ea2",
        fill: false
      }, {
        data: $('#line-chart').data('rain'),
        label: "Rain Levels",
        borderColor: "#FF69B4",
        fill: false
      }
    ]
  },
  options: {
    horizontalLine: <%= @levels.to_json.html_safe %>,
    maintainAspectRatio: true,
    responsive: false,
    legend: {
      display: false,
    },
    scales: {
      yAxes: [{
        ticks: {
          beginAtZero: true,
          max: 2
        }
      }]
    }
  }
});
</script>
<% end %>
