<center><h1> <%= @river.name %></h1><center>
<center><h2>( <%= @river.get_latest_reading.river_level %> - <%= distance_of_time_in_words(@river.get_latest_reading.time_string.to_time, Time.now) %> ago )</h2></center>
<% if @river_data %>
<div class="container">
  <div class=row style='height: 500px'>
    <div class='col-md-2'></div>
    <div class="col-md-8 chart ct-chart" style='height: 500px'
      data-timestamps="<%= @river_data[:timestamps].to_json %>"
      data-real="<%= @river_data[:real_levels].to_json %>"
      data-forecast="<%= @river_data[:predicted_level].to_json %>"
      data-rain="<%= @river_data[:rain_level].to_json %>">
    </div>
  </div>
</div>


<script>

chart = new Chartist.Line('.ct-chart', {
  labels: $('.ct-chart').data('timestamps'),
  series: [$('.ct-chart').data('forecast')]
}, {
    showPoint: false,
    showArea: true,
    width: '100%',
    height: '100%',
    divisor: 5,
    type: Chartist.FixedScaleAxis,
    axisX: {
    labelInterpolationFnc: function skipLabels(value, index) {
      return index % 12  === 0 ? moment(value * 1000).format('ddd LT') : null;
    },
  }
  }
);

chart.on('draw', function(data) {
  if(data.type === 'line' || data.type === 'area') {
    data.element.animate({
      d: {
        begin: 2000 * data.index,
        dur: 2000,
        from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),
        to: data.path.clone().stringify(),
        easing: Chartist.Svg.Easing.easeOutQuint
      }
    });
  }
});

</script>
<% end %>
